<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Lambda on Cloud | DevOps | Data | Travel | Exhibition | Shows</title>
    <link>/tags/lambda/</link>
    <description>Recent content in Lambda on Cloud | DevOps | Data | Travel | Exhibition | Shows</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 11 Jul 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/lambda/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Lambda Logshipper</title>
      <link>/posts/lambda-logshipper/</link>
      <pubDate>Thu, 11 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>/posts/lambda-logshipper/</guid>
      <description>So how can you easily move your Cloudwatch logstream to another platform or log collector endpoints? The easiest way is to ship the Cloudwatch logstream through a socket client. This is an example of a small Golang lambda function to ship aws cloudwatch log stream to a tcp endpoint.
you will need a socket client:
func SocketClient(m []byte) { conn, err := net.Dial(&amp;quot;tcp&amp;quot;, &amp;quot;your_tcp_endpoint:your_port&amp;quot;) defer conn.Close() if err != nil { fmt.</description>
    </item>
    
  </channel>
</rss>