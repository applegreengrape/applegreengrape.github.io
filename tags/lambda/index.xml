<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Lambda on DevOps | AWS | GCP | Golang | Python</title>
    <link>/tags/lambda/</link>
    <description>Recent content in Lambda on DevOps | AWS | GCP | Golang | Python</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
    <lastBuildDate>Sat, 08 Feb 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/lambda/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>2019nCov-API</title>
      <link>/posts/2019ncov-api/</link>
      <pubDate>Sat, 08 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>/posts/2019ncov-api/</guid>
      <description>The beginning of the year of rat is quite difficult for most Chinese people since the coronavirus outbreak. I have been checking the news about the progress of this outbreak. One day I watched the interview of a Chinese health official. She mentioned that there was one patient who has no idea that he has met anyone from Wuhan,the center of the outbreak. However, they used big data and found 3 people from Wuhan that have been in contact with him.</description>
    </item>
    
    <item>
      <title>Lambda Logshipper</title>
      <link>/posts/lambda-logshipper/</link>
      <pubDate>Thu, 11 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>/posts/lambda-logshipper/</guid>
      <description>How can you easily move your Cloudwatch logstream to another platform or log collector endpoints? The easiest way is to ship the Cloudwatch logstream through a socket client. This is an example of a small Golang lambda function to ship aws cloudwatch log stream to a tcp endpoint.
you will need a socket client:
func SocketClient(m []byte) { conn, err := net.Dial(&amp;#34;tcp&amp;#34;, &amp;#34;your_tcp_endpoint:your_port&amp;#34;) defer conn.Close() if err != nil { fmt.</description>
    </item>
    
  </channel>
</rss>