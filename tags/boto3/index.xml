<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Boto3 on DevOps | Golang | Python | Travel</title>
    <link>/tags/boto3/</link>
    <description>Recent content in Boto3 on DevOps | Golang | Python | Travel</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 19 Oct 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/boto3/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>AWS Resources Visualizer | yUML | Boto3 | Python </title>
      <link>/posts/uml-visualize-your-cloud/</link>
      <pubDate>Sat, 19 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>/posts/uml-visualize-your-cloud/</guid>
      <description>This is an example about how to use aws boto3 with yUML to visualize your aws cloud resources. Please feel free to ðŸ‘‰ðŸ“±message my twilio bot +447479275693.I will come back to you shortly ðŸ˜ƒ.
 In my last post, I have talked about how to play with aws boto3 api. During a usual dev-ish-ops day, sometimes I need to draw an aws network diagram. I have to log in to the console, click click click, and then copy-paste&amp;hellip;hmmmm&amp;hellip;It&#39;s a little tiny bit boring and obviously, I want to automate it.</description>
    </item>
    
    <item>
      <title>AWS | Boto3 | Python </title>
      <link>/posts/boto3-python/</link>
      <pubDate>Tue, 13 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>/posts/boto3-python/</guid>
      <description>This is an example about how to create your own python boto3 class and use it in your day-to-day work ðŸ˜ƒ. Please feel free to ðŸ‘‰ðŸ“±message my twilio bot +447479275693. I will come back to you shortly ðŸ˜ƒ.
 import boto3 import os &amp;#34;&amp;#34;&amp;#34;how to use this classimport aws_modules.get_all_sg_rulessg_rule = aws_modules.get_all_sg_rules.sg(aws_account) # passing aws_account value to retrive all sg rulessg_rule_result = sg_rule.getSgRules()&amp;#34;&amp;#34;&amp;#34; class sg: def __init__(req, aws_account): req.aws_account = aws_account def getSgRules(req): try: os.</description>
    </item>
    
  </channel>
</rss>