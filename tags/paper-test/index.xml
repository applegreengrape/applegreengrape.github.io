<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Paper Test on DevOps | Golang | Python | Travel</title>
    <link>/tags/paper-test/</link>
    <description>Recent content in Paper Test on DevOps | Golang | Python | Travel</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 13 Aug 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/paper-test/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Google Spreadsheets Paper Test By Calling Google&#39;s Spreadsheets API</title>
      <link>/posts/papertest-google-spreadsheet-api/</link>
      <pubDate>Tue, 13 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>/posts/papertest-google-spreadsheet-api/</guid>
      <description>I have made one post about doing paper test by using google app script. For a fully automated paper testing, you can use Google&amp;rsquo;s Spreadsheets API to track your paper test result. How to do it?
1. Connect to Google&amp;rsquo;s Spreadsheets API There is a quickstart documentation. And I have posted mine:
package main import ( &amp;quot;time&amp;quot; &amp;quot;encoding/json&amp;quot; &amp;quot;fmt&amp;quot; &amp;quot;io/ioutil&amp;quot; &amp;quot;log&amp;quot; &amp;quot;net/http&amp;quot; &amp;quot;os&amp;quot; &amp;quot;golang.org/x/net/context&amp;quot; &amp;quot;golang.org/x/oauth2&amp;quot; &amp;quot;golang.org/x/oauth2/google&amp;quot; &amp;quot;google.golang.org/api/sheets/v4&amp;quot; ) // Retrieve a token, saves the token, then returns the generated client.</description>
    </item>
    
    <item>
      <title>Google Spreadsheets Paper Test</title>
      <link>/posts/papertest-google-app-script/</link>
      <pubDate>Mon, 12 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>/posts/papertest-google-app-script/</guid>
      <description>I was aspired by the alpaca&amp;rsquo;s idea of using google spreadsheet as a test environment for auto algo trading. So I decided to make a version for bitcoin paper test trading. For alpaca&amp;rsquo;s stock version, you can find the details here. The google spreadsheet will look like this:
I am using coinbase api to get the lastest Bitcoin price. And there is already one google app script class that you can use - Class UrlFetchApp.</description>
    </item>
    
  </channel>
</rss>